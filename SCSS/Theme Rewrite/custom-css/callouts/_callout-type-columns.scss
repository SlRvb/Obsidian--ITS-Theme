/* Columns */
.callout[data-callout*="column"] {
    --callout-color: var(--text-normal);
    --callout-icon: layout-dashboard;
    --columns: 2;

    background: transparent;
    box-shadow: none;
    border: 0;
    width: auto;
    padding: 0;

    & > .callout-content .callout-content {
        border: 0;
    }

    & > .callout-content {
        display: grid;
        grid-template-columns: repeat(var(--columns), 1fr);
        gap: 10px;

        background: transparent;
        box-shadow: none;
        border: 0;
        padding: 0;
    }
    &:is([data-callout-metadata~="slim-margins"], [data-callout-metadata~="s-mg"]) > .callout-content {
        gap: 2px;
    }

    @for $i from 3 through 9 {
        &[data-callout-metadata~="#{$i}"] .callout-content {
            --columns: #{$i};
        }
    }

    // Flex
    &[data-callout-metadata~="flex"] {
        & > .callout-content {
            // margin-top: 5px;
            // margin-bottom: 5px;
            gap: 5px;

            grid-template-columns: none;

            display: flex;
            flex-direction: row;
            flex-wrap: wrap;

            // Sub Callout Sizing
            & .callout {
                flex: 1 1 calc(var(--file-line-width) / 2.5);
            }
        }
        &[data-callout-metadata~="3"] > .callout-content .callout {
            flex: 1 1 calc(var(--file-line-width) / 3.5);
        }

        &[data-callout-metadata~="resize"] .callout {
            flex: 1 1 auto;
            $width-type-to-value: (
                "wmicro": 5%,
                "wtiny": 10%,
                "wsmall": 20%,
                "ws-med": 30%,
                "wmed": 40%
            );

            @each $type, $value in $width-type-to-value {
                &[data-callout-metadata~="#{$type}"] {
                    width: $value;
                }
            }
        }
    }

    //Dataview List Columns
    &[data-callout-metadata~="dataview"] {
        & > .callout-content {
            grid-template-columns: unset;
            gap: unset;
        }

        & > .callout-content .dataview.list-view-ul {
            columns: var(--columns);
        }

        & > .callout-content .dataview li {
            break-inside: avoid;
        }
    }

    &[data-callout-metadata~="list-global"] .callout > .callout-content,
    &[data-callout-metadata~="list"] > .callout-content {
        grid-template-columns: unset;

        & > ul {
            columns: var(--columns);

            & > li {
                break-inside: avoid;
            }
            & .list-bullet::after {
                position: relative;
            }
        }
    }
    &[data-callout-metadata~="list-x"] > .callout-content {
        grid-template-columns: unset;

        & > ul {
            display: grid;
            grid-template-columns: repeat(var(--columns), 1fr);
        }
    }
}
