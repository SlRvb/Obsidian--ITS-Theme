@use "utils";
/* Cards */
@include utils.select-by-callout-metadata(1, "cards") {
    --callout-color: transparent;
    --callout-icon: layout-dashboard;
    --callout-padding: 0;
    --callout-content-padding: 0px;
    --callout-blend-mode: normal;

    --callout-cards-columns: 3;

    box-shadow: none;
    border: 0;
    width: auto;

    & > .callout-title {
        display: none;
    }
    & > .callout-content {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-gap: 5px;

        border-radius: 0;
        padding-inline-start: 0px;
        padding: 0;
    }
    & p {
        margin-block-start: 0;
        margin-block-end: 0;
        padding: 0;
    }

    &:not([data-callout-metadata~="nstr"], [data-callout-metadata~="no-strong"]) strong {
        display: block;
        text-align: center;
        margin: auto;
        background-color: var(--outer-bar, var(--background-secondary));
    }
    & br {
        display: none;
    }

    // Flex
    &[data-callout-metadata~="flex"] {
        &,
        & .dataview.table-view-table tbody {
            gap: unset;
            grid-template-columns: none;

            display: flex;
            flex-direction: row;
            flex-wrap: wrap;

            // Sub Callout Sizing
            & .callout {
                flex: 1 1 250px;
                margin: 5px;
                //background: transparent;
            }
        }
    }

    // Dataview
    //Table
    &[data-callout-metadata~="dataview"] {
        // Undo General Cards Grid Styling
        --callout-content-padding: 0;
        // --callout-margin: 0;
        // --callout-cards-outline: ;

        & .callout-content {
            display: unset;
            grid-template-columns: unset;
        }
        & br {
            display: block;
        }

        & .block-language-dataview {
            padding: 5px;
        }
        & .dataview.table-view-table {
            display: grid;
            margin-block-start: 0;

            // Undo Table Cell Styling
            & :is(td, tr) {
                border: 0;
                background: transparent;
                padding: 0;
            }
            // Hide Background in dv Table
            & strong {
                background: transparent;
            }
        }
        // Restyle Table Headers
        & .table-view-thead {
            & th {
                border: 0;
                background-color: transparent;
            }
            & tr {
                display: none;
            }
        }

        // Display cells as grid
        & .dataview.table-view-table tbody {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            grid-gap: 10px;

            & tr {
                display: grid;
                align-content: flex-start;
                margin: 0;
                padding: 10px;
                // flex-direction: column;

                // background-color: var(--aside-bg);
                border: 2px solid var(--outline, var(--background-modifier-box-shadow));
                box-shadow: var(--shadow-ml, var(--input-shadow));
            }
        }
        &[data-callout-metadata~="txt-c"] .dataview td {
            text-align: center;
        }

        //Image Sizing
        & img:not(.link-favicon) {
            width: 100%;
            object-fit: cover;
        }

        $sizes: (
            micro: --micro,
            tiny: --tiny,
            small: --small,
            small-med: --small-med,
            med-small: --med-small,
            medium: --medium,
            med-tall: --med-tall,
            tall: --tall
        );

        @each $size, $var in $sizes {
            &[data-callout-metadata~="img-#{$size}"] img {
                height: var($var);
            }
        }
    }

    //List
    &[data-callout-metadata~="dvl"] {
        & .callout-content {
            display: block;
        }
        & br {
            display: unset;
        }

        & .block-language-dataviewjs .dataview-result-list-li,
        & .list-view-ul li {
            padding: 10px;
            background-color: var(--outer-bar, var(--background-secondary));
            box-shadow: var(--shadow-s, var(--input-shadow));
            margin-bottom: 5px;
        }
        & .dataview.list-view-ul li::before {
            margin-left: -27px;
        }
        & ul {
            padding-inline-start: unset;
        }
    }

    // Columns
    @for $i from 1 through 9 {
        &[data-callout-metadata~="#{$i}"]
            :is(.dataview.dataview.table-view-table tbody, .callout-content.callout-content) {
            grid-template-columns: repeat($i, 1fr);
        }
    }
}

// Sizing Fixes for Note/Device sizes
.view-content > div:is(.markdown-source-view, .markdown-reading-view) > div {
    container: note / inline-size;
}

@container note (max-width: 700px) {
    .callout[data-callout~="cards"][data-callout-metadata~="dataview"] .dataview.table-view-table tbody {
        grid-template-columns: repeat(2, 1fr);
    }
}
@container note (max-width: 400px) {
    .callout[data-callout~="cards"][data-callout-metadata~="dataview"] .dataview.table-view-table tbody {
        grid-template-columns: repeat(1, 1fr);
    }
}
