.internal-embed:not(.image-embed)[alt*=htiny] .markdown-embed-content {
  height: var(--tiny);
}
.internal-embed:not(.image-embed)[alt*=hsmall] .markdown-embed-content {
  height: var(--small);
}
.internal-embed:not(.image-embed)[alt*=hs-med] .markdown-embed-content {
  height: var(--small-med);
}
.internal-embed:not(.image-embed)[alt*=hm-sm] .markdown-embed-content {
  height: var(--med-small);
}
.internal-embed:not(.image-embed)[alt*=hmed] .markdown-embed-content {
  height: var(--medium);
}
.internal-embed:not(.image-embed)[alt*=hm-tl] .markdown-embed-content {
  height: var(--med-tall);
}
.internal-embed:not(.image-embed)[alt*=htall] .markdown-embed-content {
  height: var(--tall);
}
.internal-embed:not(.image-embed)[alt*=full] .markdown-embed-content, .internal-embed:not(.image-embed)[alt*=full] .markdown-embed-content > .markdown-preview-view {
  max-height: unset;
}
.internal-embed:not(.image-embed)[alt*=wtiny] {
  width: 20%;
}
.internal-embed:not(.image-embed)[alt*=wsmall] {
  width: 30%;
}
.internal-embed:not(.image-embed)[alt*=ws-med] {
  width: 40%;
}
.internal-embed:not(.image-embed)[alt*=wm-small] {
  width: 50%;
}
.internal-embed:not(.image-embed)[alt*=wmed] {
  width: 60%;
}
.internal-embed:not(.image-embed)[alt*=wm-tl] {
  width: 80%;
}
.internal-embed:not(.image-embed)[alt*=wtall] {
  width: 95%;
}

.internal-embed[alt~=right] {
  float: right;
  margin-left: 0.5em;
}

.internal-embed[alt~=left] {
  float: left;
  margin-right: 0.5em;
}

.internal-embed[alt~=center] {
  margin: auto;
}

:not(.lp-embed-float) .is-live-preview .internal-embed:is([alt~=right], [alt~=left]) {
  float: unset;
}

/*Embed Link Hide/Move*/
.internal-embed:is([alt~=lk-hvr], [alt~=link-hover]):not(:hover) .markdown-embed-link,
.internal-embed:is([alt~=nlk], [alt~=no-link]) .markdown-embed-link {
  display: none;
}

.internal-embed:is([alt*=lk-l], [alt~=link-left]) .markdown-embed-link {
  left: 10px;
  right: unset;
}

.internal-embed:is([alt*=lk-clear], [alt~=link-clear]) .markdown-embed-link {
  background-color: transparent;
}

/*Title Hide/Show*/
.internal-embed:is([alt~=no-t],
[alt~=no-title]) .markdown-embed-title,
.file-embed-title {
  display: none;
}

.internal-embed:is([alt~=no-inline-title],
[alt~=no-it]) .inline-title,
.file-embed-title {
  display: none;
}

.internal-embed:is([alt~=ttl],
[alt~=title]) .markdown-embed-title,
.file-embed-title {
  display: block;
}

/*Hide Headings*/
.internal-embed[alt~=no-h] .markdown-embed :is(h1,
h2,
h3,
h4,
h5,
h6),
.internal-embed[alt~=no-h].markdown-embed :is(h1,
h2,
h3,
h4,
h5,
h6) {
  display: none;
}

/*Hide Specific Headings*/
.internal-embed[alt~=no-h1] .markdown-embed h1,
.internal-embed[alt~=no-h2] .markdown-embed h2,
.internal-embed[alt~=no-h3] .markdown-embed h3,
.internal-embed[alt~=no-h4] .markdown-embed h4,
.internal-embed[alt~=no-h5] .markdown-embed h5,
.internal-embed[alt~=no-h6] .markdown-embed h6,
.internal-embed[alt~=no-h1].markdown-embed h1,
.internal-embed[alt~=no-h2].markdown-embed h2,
.internal-embed[alt~=no-h3].markdown-embed h3,
.internal-embed[alt~=no-h4].markdown-embed h4,
.internal-embed[alt~=no-h5].markdown-embed h5,
.internal-embed[alt~=no-h6].markdown-embed h6 {
  display: none;
}

.internal-embed:is([alt~=no-margin], [alt~=nmg]) {
  --embed-padding: 0;
  --embed-title-padding: 0;
}

.internal-embed[alt~=collapse] {
  --embed-padding:0;
  --embed-title-padding: 0;
  --p-spacing: 0;
}
.internal-embed[alt~=collapse] *:not(.tag, .callout) {
  margin-block-start: 0;
  margin-block-end: 0;
}

body.embed-mini-headers .markdown-embed {
  --h1-size: var(--embed-header-size);
  --h2-size: var(--embed-header-size);
  --h3-size: var(--embed-header-size);
  --h4-size: var(--embed-header-size);
  --h5-size: var(--embed-header-size);
  --h6-size: var(--embed-header-size);
}

/*Clean Embeds*/
.embed-clean .internal-embed > .markdown-embed, .embed-clean .internal-embed.is-loaded:not(.image-embed),
.internal-embed[alt*=clean] > .markdown-embed,
.internal-embed[alt*=clean].is-loaded:not(.image-embed) {
  --embed-padding: 0;
  border: none;
  box-shadow: none;
}
.embed-clean .internal-embed > .markdown-embed:not(:hover), .embed-clean .internal-embed.is-loaded:not(.image-embed):not(:hover),
.internal-embed[alt*=clean] > .markdown-embed:not(:hover),
.internal-embed[alt*=clean].is-loaded:not(.image-embed):not(:hover) {
  --embed-border-color: transparent;
  --embed-border-left-color: var(--embed-border-color);
  --embed-border-right-color: var(--embed-border-color);
  --embed-border-top-color: var(--embed-border-color);
  --embed-border-bottom-color: var(--embed-border-color);
  --embed-border-left: var(--embed-thickness) var(--embed-border-type) var(--embed-border-left-color);
  --embed-border-right: var(--embed-thickness) var(--embed-border-type) var(--embed-border-right-color);
  --embed-border-top: var(--embed-thickness) var(--embed-border-type) var(--embed-border-top-color);
  --embed-border-bottom: var(--embed-thickness) var(--embed-border-type) var(--embed-border-bottom-color);
}
.embed-clean .internal-embed.inline-embed,
.internal-embed[alt*=clean].inline-embed {
  --embed-title-padding: 0;
}

.embed-dark-background {
  --embed-background: var(--embed-bg);
  --embed-border-left-color: transparent;
  --embed-border-color-hover: var(--accent);
  --embed-border-left-color-hover: var(--embed-border-color-hover);
  --embed-border-right-color-hover: var(--embed-border-color-hover);
  --embed-border-top-color-hover: var(--embed-border-color-hover);
  --embed-border-bottom-color-hover: var(--embed-border-color-hover);
  --hr-icon-background: var(--embed-bg);
  --blockquote-background-color: linear-gradient(to right, var(--note), transparent);
  --table-border-color: var(--embed-bg);
}

/*@settings
name: Embed Adjustments
id: embed-adjustments
settings:
    - 
        id: info-text-SlRvb-embed-adj
        type: info-text
        title: Embed Adjustments by SlRvb
        description: "[Embed Adjustments Snippet How-To Guide](https://publish.obsidian.md/slrvb-docs/ITS+Theme/Embed+Adjustments)"
        markdown: true
*/
